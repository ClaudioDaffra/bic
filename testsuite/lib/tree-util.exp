proc EOL {} {return "\[\n\r\]+"}
proc BOL {} {return "\[ \t\]*"}

proc re_tree_preamble { type } {
    return "[BOL]<tree at 0x\[0-9a-f]+, next \(\\(nil\\)|0x\[0-9a-f\]+\), type $type"
}

proc re_tree_integer { n } {
    set RE [re_tree_preamble "T_INTEGER"]
    set RE "$RE, number $n>[EOL]"
    return $RE
}

proc re_tree_postfix_inc { exp_regex } {
    set RE [re_tree_preamble "T_INC"]
    set RE "$RE, exp:[EOL]"
    set RE "$RE$exp_regex"
    set RE "$RE[BOL]>[EOL]"
    return $RE
}

proc expect_tree_integer { n } {
    global test
     expect {
         -re [re_tree_integer $n] { pass "$test" }
    }
}

proc expect_tree_postfix_inc { exp_regex } {
    global test
     expect {
         -re [re_tree_postfix_inc $exp_regex] { pass "$test" }
    }
}
